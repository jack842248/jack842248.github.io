<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jack Huang Blog</title>
    <link>https://jack842248.github.io/</link>
    <description>Recent content on Jack Huang Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>jack842248@gmail.com (JackHuang)</managingEditor>
    <webMaster>jack842248@gmail.com (JackHuang)</webMaster>
    <lastBuildDate>Mon, 01 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://jack842248.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>學習Vue前端框架1</title>
      <link>https://jack842248.github.io/post/2021-02-01-%E5%AD%B8%E7%BF%92vue%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B61/</link>
      <pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate>
      <author>jack842248@gmail.com (JackHuang)</author>
      <guid>https://jack842248.github.io/post/2021-02-01-%E5%AD%B8%E7%BF%92vue%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B61/</guid>
      <description>Vue.js是以資料狀態操作畫面，偏向MVVM軟體設計模式。
 MVVM(Model View Viewmodel)     英文 Model View Viewmodel     中文 模型 視圖 資料聯繫器      視圖←Binding→資料聯繫器→←模型     MVC(Model View Controller)     英文 Model View Controller Database     中文 模型 視圖 控制器 資料庫      視圖→發送請求→控制器→模型→資料庫→回傳資料→模型→控制器→渲染→視圖     開始使用Vue.js   #app裡不能再建立#app。    若有多個.</description>
    </item>
    
    <item>
      <title>Vue.js devtools安裝</title>
      <link>https://jack842248.github.io/post/2021-02-01-vue.js-devtools%E5%AE%89%E8%A3%9D/</link>
      <pubDate>Sun, 31 Jan 2021 00:00:00 +0000</pubDate>
      <author>jack842248@gmail.com (JackHuang)</author>
      <guid>https://jack842248.github.io/post/2021-02-01-vue.js-devtools%E5%AE%89%E8%A3%9D/</guid>
      <description>  安裝Vue.js devtools開發者工具   Vue.js devtools是一個Chrome擴充工具，點擊前往網址。      要使用Vue.js devtools的前提是&amp;hellip;，該網站引入的Vue.js版本必須&amp;quot;不是min版&amp;quot;。      點選Chrome右上角&amp;quot;設定&amp;quot;(頭像右邊)→更多工具→擴充功能→找到&amp;quot;Vue.js devtools&amp;quot;，將&amp;quot;允許存許網址&amp;quot;開啟。      打開檔案總管，進入C槽→\Users(使用者)\jack8(電腦名稱)\AppData\Local\Google\Chrome\User Data\Default\Extensions\nhdogjmejiglipccpnnnanhbledajbpd\5.3.4_0(版本可能不同)，將裡面的&amp;quot;manifest.json&amp;quot;開啟，然後把&amp;quot;persistent&amp;quot;:false改成true。      在Chrome右上角Vue小圖示有亮起顏色的時候，右鍵→檢查，就可以看到開發者工具最後面出現&amp;quot;Vue&amp;quot;。       補充說明
 </description>
    </item>
    
    <item>
      <title>Javascript小知識7</title>
      <link>https://jack842248.github.io/post/2021-01-30-javascript%E5%B0%8F%E7%9F%A5%E8%AD%987/</link>
      <pubDate>Sat, 30 Jan 2021 00:00:00 +0000</pubDate>
      <author>jack842248@gmail.com (JackHuang)</author>
      <guid>https://jack842248.github.io/post/2021-01-30-javascript%E5%B0%8F%E7%9F%A5%E8%AD%987/</guid>
      <description>var、let、const   宣告變數用。      名稱 var let const     作用域 在函式裡 在block{}裡 在block{}裡   宣告的變數 可以賦予新的值 可以賦予新的值 不能賦予新的值   重複宣告變數時 不會出錯 會出錯 會出錯   從創造到執行階段會 提升(Hoisting) 暫時性死區(TDZ) 會出現錯誤      當使用 for迴圈 時:   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  /** for迴圈(var) **/ for(var i=0 ; i&amp;lt;3 ; i++){ setTimeout(function(){ console.</description>
    </item>
    
    <item>
      <title>Javascript小知識6</title>
      <link>https://jack842248.github.io/post/2021-01-29-javascript%E5%B0%8F%E7%9F%A5%E8%AD%986/</link>
      <pubDate>Fri, 29 Jan 2021 00:00:00 +0000</pubDate>
      <author>jack842248@gmail.com (JackHuang)</author>
      <guid>https://jack842248.github.io/post/2021-01-29-javascript%E5%B0%8F%E7%9F%A5%E8%AD%986/</guid>
      <description>Object.defineProperty()   可以調整物件裡的屬性特徵。      帶入的值 名稱 中文 預設值 例如     物件 Object  &amp;mdash;    屬性 &amp;quot;Attributes&amp;quot;  &amp;mdash;    參數a value 屬性的值 &amp;mdash;    參數b writable 可否寫入 true 賦予(=)   參數c configurable 可否被刪除 true delete   參數d enumerable 可否被列舉 true for&amp;hellip;in     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  var obj1 = { name:&amp;#34;蘋果&amp;#34;, amount:100 } Object.</description>
    </item>
    
    <item>
      <title>Javascript小知識5</title>
      <link>https://jack842248.github.io/post/2021-01-28-javascript%E5%B0%8F%E7%9F%A5%E8%AD%985/</link>
      <pubDate>Thu, 28 Jan 2021 00:00:00 +0000</pubDate>
      <author>jack842248@gmail.com (JackHuang)</author>
      <guid>https://jack842248.github.io/post/2021-01-28-javascript%E5%B0%8F%E7%9F%A5%E8%AD%985/</guid>
      <description>原型(Prototype)   純值可用建構式繼承在原型下。    原型可利用建構函式新增屬性。    原型有向上查找屬性的功能，而且屬性是共用的。    原型鍊:      建構式 原型(上層) 原型(上上層)     new Object() &amp;mdash; Object   new Array() Array Object   new Number() Number Object   new String() String Object   new Boolean() Boolean Object     1 2 3 4 5 6 7 8 9  var a = [1 , 2 , 3]; var b = [4 , 5 , 6]; a.</description>
    </item>
    
    <item>
      <title>Javascript小知識4</title>
      <link>https://jack842248.github.io/post/2021-01-27-javascript%E5%B0%8F%E7%9F%A5%E8%AD%984/</link>
      <pubDate>Wed, 27 Jan 2021 00:00:00 +0000</pubDate>
      <author>jack842248@gmail.com (JackHuang)</author>
      <guid>https://jack842248.github.io/post/2021-01-27-javascript%E5%B0%8F%E7%9F%A5%E8%AD%984/</guid>
      <description>函式(Function)   是包含{程式碼片段}的物件。    擁有被呼叫、回傳的功能。     函式可細分以下幾種 :
  函式陳述式
 具名函式。(範例一)    函式表達式
  匿名函式。(範例二)
  具名函式。(範例三)
       具名的函式能夠在函式中被呼叫使用
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47  /** 範例一 **/ function fn1(){ console.</description>
    </item>
    
    <item>
      <title>Javascript小知識3</title>
      <link>https://jack842248.github.io/post/2021-01-26-javascript%E5%B0%8F%E7%9F%A5%E8%AD%983/</link>
      <pubDate>Tue, 26 Jan 2021 00:00:00 +0000</pubDate>
      <author>jack842248@gmail.com (JackHuang)</author>
      <guid>https://jack842248.github.io/post/2021-01-26-javascript%E5%B0%8F%E7%9F%A5%E8%AD%983/</guid>
      <description>物件實字(Object Literals)   直接撰寫 var obj1 = {&amp;hellip;} 物件。(範例一)   建構物件(Constructor Object)   使用 new Object() 包裹方式建立。(範例二)   1 2 3 4 5 6 7 8 9 10  /** 範例一 **/ var obj1 = { name:&amp;#34;蘋果&amp;#34;, amount: 100 } /** 範例二 **/ var obj1 = new Object(); obj1.name = &amp;#34;蘋果&amp;#34;; obj1.amount = 100;      物件的基本應用方法 :   使用 .</description>
    </item>
    
    <item>
      <title>Javascript小知識2</title>
      <link>https://jack842248.github.io/post/2021-01-25-javascript%E5%B0%8F%E7%9F%A5%E8%AD%982/</link>
      <pubDate>Mon, 25 Jan 2021 00:00:00 +0000</pubDate>
      <author>jack842248@gmail.com (JackHuang)</author>
      <guid>https://jack842248.github.io/post/2021-01-25-javascript%E5%B0%8F%E7%9F%A5%E8%AD%982/</guid>
      <description>陳述式(Statement)   不會回傳結果，不能賦值(=)到變數上。      陳述式 例如     判斷式 if、else if、else、switch、break   宣告變數 var、let、const   函式陳述式 function fn1(){&amp;hellip;}   block區塊 {}     1 2 3 4 5 6 7 8 9 10 11 12 13  //判斷式 if(){...}else{} //宣告變數 var a; //函式陳述式 function fn1(){...} //block區塊 { let a = 1; }      判斷式(if&amp;hellip;else)   判斷式裡如果是 真值(Truthy) ，就會成立。    判斷式裡如果是 假值(Falsy) ，就會不成立。      判斷值 例如     真值 true 、 1 、 &amp;ldquo;1&amp;rdquo; 、 [] 、 {}   假值 false 、 0 、 &amp;quot;&amp;quot; 、 NaN 、 null 、 undefined     1 2 3 4 5 6 7 8 9 10 11 12 13  /** 範例一 **/ if([]){ console.</description>
    </item>
    
    <item>
      <title>Javascript小知識1</title>
      <link>https://jack842248.github.io/post/2021-01-24-javascript%E5%B0%8F%E7%9F%A5%E8%AD%981/</link>
      <pubDate>Sun, 24 Jan 2021 00:00:00 +0000</pubDate>
      <author>jack842248@gmail.com (JackHuang)</author>
      <guid>https://jack842248.github.io/post/2021-01-24-javascript%E5%B0%8F%E7%9F%A5%E8%AD%981/</guid>
      <description>程式語言可以分為兩種 : javascript屬於直譯式語言。
 直譯式語言(Interpreted Language)     例如 JavaScript、Python、PHP、Ruby、BASIC、LISP、Perl、R     流程 原始碼 → 直譯器 → 代碼生成 → 執行   特性 程式碼由上到下執行，效能比較差、除錯比較慢、需要依賴執行環境。     編譯式語言(Compiled Language)     例如 Java、C、C#、C++、Pascal     流程 原始碼 → 預處理器 → 代碼生成 → 執行   特性 效能比較好、除錯比較快、程式碼可獨立執行。       程式語言的作用域可以分為兩種 : javascript屬於靜態作用域。
 靜態作用域(Lexical Scope)   又稱 : 語法作用域。    語法在解析時就決定作用域，而且不再改變。   1 2 3 4 5 6 7  function fn1(){ var a = 1; } fn1(); console.</description>
    </item>
    
    <item>
      <title>Markdown撰寫語法</title>
      <link>https://jack842248.github.io/post/2021-01-23-markdown%E5%9F%BA%E6%9C%AC%E6%92%B0%E5%AF%AB/</link>
      <pubDate>Sat, 23 Jan 2021 00:00:00 +0000</pubDate>
      <author>jack842248@gmail.com (JackHuang)</author>
      <guid>https://jack842248.github.io/post/2021-01-23-markdown%E5%9F%BA%E6%9C%AC%E6%92%B0%E5%AF%AB/</guid>
      <description>一級標題 # 一級標題    二級標題  ## 二級標題    三級標題  ### 三級標題    四級標題  #### 四級標題    五級標題  ##### 五級標題    六級標題  ###### 六級標題    斜體
 *斜體*    粗體
 **粗體**    粗斜體
 ***粗斜體***    文字刪除線
 ~~文字刪除線~~     有序序列 有序序列 有序序列   1.</description>
    </item>
    
    <item>
      <title>Hugo Blog建立成功</title>
      <link>https://jack842248.github.io/post/2021-01-22-hugo-blog%E5%BB%BA%E7%AB%8B%E6%88%90%E5%8A%9F/</link>
      <pubDate>Fri, 22 Jan 2021 00:00:00 +0000</pubDate>
      <author>jack842248@gmail.com (JackHuang)</author>
      <guid>https://jack842248.github.io/post/2021-01-22-hugo-blog%E5%BB%BA%E7%AB%8B%E6%88%90%E5%8A%9F/</guid>
      <description>前言
  我所使用的Hugo主題是beautiful hugo。
 當初在建立時，是觀看Github 免費架站術！輕鬆打造個人品牌這堂課程，才完成它的。
 這堂課非常適合初心者學習，
 裡面包含Github、Hugo、Markdown的介紹與使用，
 有興趣的可以參考看看。
    分享設定
  其中對於Hugo主題裡的config.toml不知道要怎麼設定&amp;hellip;
 不論你選擇的主題是否跟我一樣，在設定上還是有一些相似的地方。
 在此你可以參考我的主題設定來完成它 :
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81  #此網站的連結網址 baseurl = &amp;#34;https://jack842248.</description>
    </item>
    
    <item>
      <title>ABOUT</title>
      <link>https://jack842248.github.io/page/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>jack842248@gmail.com (JackHuang)</author>
      <guid>https://jack842248.github.io/page/about/</guid>
      <description>我來自桃園，大學畢業於彰化大葉大學多媒體設計系，接觸過不少程式軟體，畢業後在曼黛瑪璉擔任空間陳列職員，現在因為接觸了線上課程，毅然決然地加入網頁領域。
因學到的知識越來越多，手寫筆記一本接一本的寫，這麼龐大的資料紀載，如果再用手寫實在是太慢了，因此開設此部落格來記錄整個資料以及歷程。</description>
    </item>
    
  </channel>
</rss>
