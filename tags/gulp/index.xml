<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gulp on Jack Huang Blog</title>
    <link>https://jack842248.github.io/tags/gulp/</link>
    <description>Recent content in gulp on Jack Huang Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>jack842248@gmail.com (JackHuang)</managingEditor>
    <webMaster>jack842248@gmail.com (JackHuang)</webMaster>
    <lastBuildDate>Sun, 20 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://jack842248.github.io/tags/gulp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>【gulp】撰寫html網頁模版</title>
      <link>https://jack842248.github.io/post/2023-08-20-gulp-%E6%92%B0%E5%AF%ABhtml%E7%B6%B2%E9%A0%81%E6%A8%A1%E7%89%88/</link>
      <pubDate>Sun, 20 Aug 2023 00:00:00 +0000</pubDate>
      <author>jack842248@gmail.com (JackHuang)</author>
      <guid>https://jack842248.github.io/post/2023-08-20-gulp-%E6%92%B0%E5%AF%ABhtml%E7%B6%B2%E9%A0%81%E6%A8%A1%E7%89%88/</guid>
      <description>gulp-nunjucks-render 在專案中打開終端機安裝gulp-nunjucks-render套件 1 $ npm install gulp-nunjucks-render 在gulpfile.js新增程式碼 1 2 3 4 5 6 7 8 9 10 11 12 const gulp = require(&amp;#39;gulp&amp;#39;); const nunjucksRender = require(&amp;#39;gulp-nunjucks-render&amp;#39;); gulp.task(&amp;#39;layout&amp;#39;,function(){ return gulp .src(&amp;#39;src/**/*.html&amp;#39;) .pipe(nunjucksRender({ path: [&amp;#39;src/templates&amp;#39;] })) .pipe(gulp.dest(&amp;#39;dist&amp;#39;)) .pipe(browserSync.stream()); }); 在終端機執行指令 1 $ gulp layout 執行後會自動壓縮img裡的圖片，到dist裡的img資料夾裡 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 you project ├─── node_modules/ ├─── dist/ │ └─── index.html # 模板＋內容 │ ├─── src/ │ ├─── templates/ │ │ │ │ │ └─── layout.</description>
    </item>
    
    <item>
      <title>【gulp】撰寫html網頁模版</title>
      <link>https://jack842248.github.io/post/2023-12-01-php-%E5%9F%B7%E8%A1%8Cphp%E5%B0%88%E6%A1%88/</link>
      <pubDate>Sun, 20 Aug 2023 00:00:00 +0000</pubDate>
      <author>jack842248@gmail.com (JackHuang)</author>
      <guid>https://jack842248.github.io/post/2023-12-01-php-%E5%9F%B7%E8%A1%8Cphp%E5%B0%88%E6%A1%88/</guid>
      <description>gulp-nunjucks-render 在專案中打開終端機安裝gulp-nunjucks-render套件 1 $ npm install gulp-nunjucks-render 在gulpfile.js新增程式碼 1 2 3 4 5 6 7 8 9 10 11 12 const gulp = require(&amp;#39;gulp&amp;#39;); const nunjucksRender = require(&amp;#39;gulp-nunjucks-render&amp;#39;); gulp.task(&amp;#39;layout&amp;#39;,function(){ return gulp .src(&amp;#39;src/**/*.html&amp;#39;) .pipe(nunjucksRender({ path: [&amp;#39;src/templates&amp;#39;] })) .pipe(gulp.dest(&amp;#39;dist&amp;#39;)) .pipe(browserSync.stream()); }); 在終端機執行指令 1 $ gulp layout 執行後會自動壓縮img裡的圖片，到dist裡的img資料夾裡 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 you project ├─── node_modules/ ├─── dist/ │ └─── index.html # 模板＋內容 │ ├─── src/ │ ├─── templates/ │ │ │ │ │ └─── layout.</description>
    </item>
    
    <item>
      <title>【gulp】壓縮圖片並優化</title>
      <link>https://jack842248.github.io/post/2023-08-19-gulp-%E5%A3%93%E7%B8%AE%E5%9C%96%E7%89%87%E4%B8%A6%E5%84%AA%E5%8C%96/</link>
      <pubDate>Sat, 19 Aug 2023 00:00:00 +0000</pubDate>
      <author>jack842248@gmail.com (JackHuang)</author>
      <guid>https://jack842248.github.io/post/2023-08-19-gulp-%E5%A3%93%E7%B8%AE%E5%9C%96%E7%89%87%E4%B8%A6%E5%84%AA%E5%8C%96/</guid>
      <description>gulp-imagemin 在專案中打開終端機安裝gulp-imagemin套件(版本@7.1.0) 1 $ npm install gulp-imagemin@7.1.0 在gulpfile.js新增程式碼 1 2 3 4 5 6 7 8 9 const gulp = require(&amp;#39;gulp&amp;#39;); const imagemin = require(&amp;#39;gulp-imagemin&amp;#39;); gulp.task(&amp;#39;imagemin&amp;#39;, function(){ return gulp .src(&amp;#39;src/img/*&amp;#39;) .pipe(imagemin()) //執行優化(壓縮) .pipe(gulp.dest(&amp;#39;dist/img&amp;#39;)); }); 在終端機執行指令 1 $ gulp imagemin 執行後會自動壓縮img裡的圖片，到dist裡的img資料夾裡 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 you project ├─── node_modules/ ├─── dist/ │ └─── img/ │ │ │ └─── logo.svg # 壓縮過的 │ ├─── src/ │ └─── img/ │ │ │ └─── logo.</description>
    </item>
    
    <item>
      <title>【gulp】自動刪除上一次的編譯結果</title>
      <link>https://jack842248.github.io/post/2023-08-18-gulp-%E8%87%AA%E5%8B%95%E5%88%AA%E9%99%A4%E4%B8%8A%E4%B8%80%E6%AC%A1%E7%9A%84%E7%B7%A8%E8%AD%AF%E7%B5%90%E6%9E%9C/</link>
      <pubDate>Fri, 18 Aug 2023 00:00:00 +0000</pubDate>
      <author>jack842248@gmail.com (JackHuang)</author>
      <guid>https://jack842248.github.io/post/2023-08-18-gulp-%E8%87%AA%E5%8B%95%E5%88%AA%E9%99%A4%E4%B8%8A%E4%B8%80%E6%AC%A1%E7%9A%84%E7%B7%A8%E8%AD%AF%E7%B5%90%E6%9E%9C/</guid>
      <description>del 在專案中打開終端機安裝del套件(版本6.1.1) 1 $ npm install del@6.1.1 在gulpfile.js新增程式碼 1 2 3 4 5 6 7 8 9 10 11 12 const gulp = require(&amp;#39;gulp&amp;#39;); const del = require(&amp;#39;del&amp;#39;); gulp.task(&amp;#39;clean&amp;#39;, function(){ return del([&amp;#39;dist/**/*&amp;#39;,&amp;#39;!dist/img&amp;#39;]) //刪除dist裡的所有檔案，圖片除外 }); gulp.task(&amp;#39;copyHTML&amp;#39;, function(){ return gulp .src(&amp;#39;src/*.html&amp;#39;) .pipe(gulp.dest(&amp;#39;dist&amp;#39;)) }); 在終端機執行指令 1 $ gulp clean 執行後會先執行刪除動作後，再重新生成新的index.html you project ├─── node_modules/ ├─── dist/ │ │ │ └─── index.html #刪除後再重新成的index.html │ ├─── src/ │ │ │ └─── index.html │ ├─── gulpfile.</description>
    </item>
    
    <item>
      <title>【gulp】開啟本地端伺服器瀏覽網站</title>
      <link>https://jack842248.github.io/post/2023-08-17-gulp-%E9%96%8B%E5%95%9F%E6%9C%AC%E5%9C%B0%E7%AB%AF%E4%BC%BA%E6%9C%8D%E5%99%A8%E7%80%8F%E8%A6%BD%E7%B6%B2%E7%AB%99/</link>
      <pubDate>Thu, 17 Aug 2023 00:00:00 +0000</pubDate>
      <author>jack842248@gmail.com (JackHuang)</author>
      <guid>https://jack842248.github.io/post/2023-08-17-gulp-%E9%96%8B%E5%95%9F%E6%9C%AC%E5%9C%B0%E7%AB%AF%E4%BC%BA%E6%9C%8D%E5%99%A8%E7%80%8F%E8%A6%BD%E7%B6%B2%E7%AB%99/</guid>
      <description>browser-sync 在專案中打開終端機安裝browser-sync、gulp-sass、sass套件(版本@1.62.0) 1 $ npm install browser-sync gulp-sass sass@1.62.0 在gulpfile.js新增程式碼 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 const gulp = require(&amp;#39;gulp&amp;#39;); const sass = require(&amp;#39;gulp-sass&amp;#39;)(require(&amp;#39;sass&amp;#39;)); const browserSync = require(&amp;#39;browser-sync&amp;#39;).create(); gulp.task(&amp;#39;copyHTML&amp;#39;, function(){ return gulp .src(&amp;#39;src/**/*.html&amp;#39;) .pipe(gulp.dest(&amp;#39;dist&amp;#39;)) .pipe(browserSync.stream()); //更新到瀏覽器 }); gulp.task(&amp;#39;sass&amp;#39;, function(){ return gulp .src(&amp;#39;src/scss/*.*&amp;#39;) .pipe(sass() .on(&amp;#39;error&amp;#39;,sass.logError)) .pipe(gulp.dest(&amp;#39;dist/css&amp;#39;)); .pipe(browserSync.stream()); //更新到瀏覽器 }); gulp.</description>
    </item>
    
    <item>
      <title>【gulp】將引入的js套件合併成一個檔案</title>
      <link>https://jack842248.github.io/post/2023-08-16-gulp-%E5%B0%87%E5%BC%95%E5%85%A5%E7%9A%84js%E5%A5%97%E4%BB%B6%E5%90%88%E4%BD%B5%E6%88%90%E4%B8%80%E5%80%8B%E6%AA%94%E6%A1%88/</link>
      <pubDate>Wed, 16 Aug 2023 00:00:00 +0000</pubDate>
      <author>jack842248@gmail.com (JackHuang)</author>
      <guid>https://jack842248.github.io/post/2023-08-16-gulp-%E5%B0%87%E5%BC%95%E5%85%A5%E7%9A%84js%E5%A5%97%E4%BB%B6%E5%90%88%E4%BD%B5%E6%88%90%E4%B8%80%E5%80%8B%E6%AA%94%E6%A1%88/</guid>
      <description>gulp-concat 在專案中打開終端機安裝gulp-concat、jquery、bootstrap套件(版本@4.6.2) 1 $ npm install gulp-concat jquery bootstrap@4.6.2 在gulpfile.js新增程式碼 1 2 3 4 5 6 7 8 9 10 11 12 13 const gulp = require(&amp;#39;gulp&amp;#39;); const concat = require(&amp;#39;gulp-concat&amp;#39;); gulp.task(&amp;#39;concat&amp;#39;, function(){ return gulp .src([ &amp;#39;node_modules/jquery/dist/jquery.slim.min.js&amp;#39;, //引入jQuery &amp;#39;node_modules/bootstrap/dist/js/bootstrap.bundle.min.js&amp;#39;, //引入bootstrap &amp;#39;src/js/*.js&amp;#39; //引入自定義js ]) .pipe(concat(&amp;#39;all.js&amp;#39;)) // 合併檔案，名稱為：all.js .pipe(gulp.dest(&amp;#39;dist/css&amp;#39;)); }); 在終端機執行指令 1 $ gulp concat 執行結果會在src裡新增一個all.js檔 you project ├─── node_modules/ ├─── dist/ │ │ │ └─── js/ │ │ │ └─── all.</description>
    </item>
    
    <item>
      <title>【gulp】生成程式碼map以利除錯編譯</title>
      <link>https://jack842248.github.io/post/2023-08-15-gulp-%E7%94%9F%E6%88%90%E7%A8%8B%E5%BC%8F%E7%A2%BCmap%E4%BB%A5%E5%88%A9%E9%99%A4%E9%8C%AF%E7%B7%A8%E8%AD%AF/</link>
      <pubDate>Tue, 15 Aug 2023 00:00:00 +0000</pubDate>
      <author>jack842248@gmail.com (JackHuang)</author>
      <guid>https://jack842248.github.io/post/2023-08-15-gulp-%E7%94%9F%E6%88%90%E7%A8%8B%E5%BC%8F%E7%A2%BCmap%E4%BB%A5%E5%88%A9%E9%99%A4%E9%8C%AF%E7%B7%A8%E8%AD%AF/</guid>
      <description>gulp-sourcemaps 在專案中打開終端機安裝gulp-sourcemaps、gulp-sass、sass套件(版本@1.62.0) 1 $ npm install gulp-sourcemaps gulp-sass sass@1.62.0 在gulpfile.js新增程式碼 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const gulp = require(&amp;#39;gulp&amp;#39;); const sass = require(&amp;#39;gulp-sass&amp;#39;)(require(&amp;#39;sass&amp;#39;)); const sourcemaps = require(&amp;#39;gulp-sourcemaps&amp;#39;); gulp.task(&amp;#39;sass&amp;#39;, function(){ return gulp .src(&amp;#39;src/scss/**/*.*&amp;#39;) .pipe(sourcemaps.init()) //sourcemaps初始化 .pipe( sass().on(&amp;#39;error&amp;#39;,sass.logError) ) .pipe(sourcemaps.write(&amp;#34;./&amp;#34;)) //在當前的目錄下，生成sourcemaps文件 .pipe(gulp.dest(&amp;#39;dist/css&amp;#39;)) }); 在終端機執行指令 1 $ gulp sass 執行結果會在all.css旁自動新加入一個.map檔 you project ├─── node_modules/ ├─── dist/ │ │ │ └─── css/ │ │ │ ├─── all.</description>
    </item>
    
    <item>
      <title>【gulp】將css樣式加上前綴增加瀏覽器兼容性</title>
      <link>https://jack842248.github.io/post/2023-08-14-gulp-%E5%B0%87css%E6%A8%A3%E5%BC%8F%E5%8A%A0%E4%B8%8A%E5%89%8D%E7%B6%B4%E5%A2%9E%E5%8A%A0%E7%80%8F%E8%A6%BD%E5%99%A8%E5%85%BC%E5%AE%B9%E6%80%A7/</link>
      <pubDate>Mon, 14 Aug 2023 00:00:00 +0000</pubDate>
      <author>jack842248@gmail.com (JackHuang)</author>
      <guid>https://jack842248.github.io/post/2023-08-14-gulp-%E5%B0%87css%E6%A8%A3%E5%BC%8F%E5%8A%A0%E4%B8%8A%E5%89%8D%E7%B6%B4%E5%A2%9E%E5%8A%A0%E7%80%8F%E8%A6%BD%E5%99%A8%E5%85%BC%E5%AE%B9%E6%80%A7/</guid>
      <description>gulp-postcss 在專案中打開終端機安裝gulp-postcss、autoprefixer、cssnano、gulp-sass、sass套件(版本@1.62.0) 1 $ npm install gulp-postcss autoprefixer cssnano gulp-sass sass@1.62.0 在gulpfile.js新增程式碼 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 const gulp = require(&amp;#39;gulp&amp;#39;); const sass = require(&amp;#39;gulp-sass&amp;#39;)(require(&amp;#39;sass&amp;#39;)); const postcss = require(&amp;#39;gulp-postcss&amp;#39;); const autoprefixer = require(&amp;#39;autoprefixer&amp;#39;); const cssnano = require(&amp;#39;cssnano&amp;#39;); gulp.task(&amp;#39;sass&amp;#39;, function(){ return gulp .src(&amp;#39;src/scss/*.*&amp;#39;) .pipe(sass() .on(&amp;#39;error&amp;#39;,sass.logError)) .pipe( postcss([ autoprefixer(), //使用autoprefixer套件，將編譯完成的CSS做PostCSS處理，確保你的CSS在不同瀏覽器中正確顯示 cssnano() //使用cssnano套件，去除不必要的空格、注釋從而壓縮和最小化CSS ]) ) .pipe(gulp.dest(&amp;#39;dist/css&amp;#39;)); }); 在終端機執行指令 1 $ gulp sass 執行結果會將css樣式加上前綴詞-webkit-讓瀏覽器兼容性更好 you project ├─── node_modules/ ├─── dist/ │ │ │ └─── css/ │ │ │ └─── all.</description>
    </item>
    
    <item>
      <title>【gulp】將javascript整合成穩定版本</title>
      <link>https://jack842248.github.io/post/2023-08-13-gulp-%E5%B0%87javascript%E6%95%B4%E5%90%88%E6%88%90%E7%A9%A9%E5%AE%9A%E7%89%88%E6%9C%AC/</link>
      <pubDate>Sun, 13 Aug 2023 00:00:00 +0000</pubDate>
      <author>jack842248@gmail.com (JackHuang)</author>
      <guid>https://jack842248.github.io/post/2023-08-13-gulp-%E5%B0%87javascript%E6%95%B4%E5%90%88%E6%88%90%E7%A9%A9%E5%AE%9A%E7%89%88%E6%9C%AC/</guid>
      <description>gulp-babel 在專案中打開終端機安裝gulp-babel、@babel/core、@babel/preset-env套件 1 $ npm install gulp-babel @babel/core @babel/preset-env @開頭的套件，表示這是一個由特定組織或作者維護的套件
在gulpfile.js新增程式碼 1 2 3 4 5 6 7 8 9 10 11 12 13 const gulp = require(&amp;#39;gulp&amp;#39;); const babel = require(&amp;#39;gulp-babel&amp;#39;); gulp.task(&amp;#39;babel&amp;#39;, function(){ return gulp .src(&amp;#39;src/js/*.js&amp;#39;) //引用js檔案來源 .pipe( babel({ //使用babel套件 presets:[&amp;#39;@babel/env&amp;#39;] //設定使用&amp;#39;@babel/env&amp;#39;套件進行編譯 }) ) .pipe(gulp.dest(&amp;#39;dist/js&amp;#39;)) //js編譯完成路徑 }); 在終端機執行指令 1 $ gulp babel 執行結果會將src裡的所有js檔(ES5、ES6、ES7)編譯，生成到dist裡變成穩定的all.js you project ├─── node_modules/ ├─── dist/ │ │ │ └─── js/ │ │ │ └─── all.</description>
    </item>
    
    <item>
      <title>【gulp】將scss自動編譯成css</title>
      <link>https://jack842248.github.io/post/2023-08-12-gulp-%E5%B0%87scss%E8%87%AA%E5%8B%95%E7%B7%A8%E8%AD%AF%E6%88%90css/</link>
      <pubDate>Sat, 12 Aug 2023 00:00:00 +0000</pubDate>
      <author>jack842248@gmail.com (JackHuang)</author>
      <guid>https://jack842248.github.io/post/2023-08-12-gulp-%E5%B0%87scss%E8%87%AA%E5%8B%95%E7%B7%A8%E8%AD%AF%E6%88%90css/</guid>
      <description>gulp-sass 在專案中打開終端機安裝gulp-sass和sass套件(版本@1.62.0) 1 $ npm install gulp-sass sass@1.62.0 在gulpfile.js新增程式碼 1 2 3 4 5 6 7 8 9 10 11 const gulp = require(&amp;#39;gulp&amp;#39;); const sass = require(&amp;#39;gulp-sass&amp;#39;)(require(&amp;#39;sass&amp;#39;)); gulp.task(&amp;#39;sass&amp;#39;, function(){ return gulp .src(&amp;#39;src/scss/**/*.scss&amp;#39;) //引用scss檔案路徑 .pipe( sass().on(&amp;#39;error&amp;#39;,sass.logError) //sass編譯過程中捕捉錯誤並輸出錯誤訊息，以避免因編譯錯誤而中斷gulp ) .pipe(gulp.dest(&amp;#39;dist/css&amp;#39;)) //css編譯完成路徑 }); 在終端機執行指令 1 $ gulp sass 執行結果會將src裡的scss編譯，生成到dist裡變成css you project ├─── node_modules/ ├─── dist/ │ │ │ └─── css/ │ │ │ └─── all.css #編譯完成的css檔 │ ├─── src/ │ └─── scss/ │ │ │ └─── all.</description>
    </item>
    
    <item>
      <title>【gulp】安裝gulp建立bootstrap開發環境</title>
      <link>https://jack842248.github.io/post/2023-08-11-gulp-%E5%BB%BA%E7%AB%8Bgulp%E9%96%8B%E7%99%BC%E7%92%B0%E5%A2%83/</link>
      <pubDate>Fri, 11 Aug 2023 00:00:00 +0000</pubDate>
      <author>jack842248@gmail.com (JackHuang)</author>
      <guid>https://jack842248.github.io/post/2023-08-11-gulp-%E5%BB%BA%E7%AB%8Bgulp%E9%96%8B%E7%99%BC%E7%92%B0%E5%A2%83/</guid>
      <description>&lt;hr&gt;
&lt;h1 id=&#34;heading&#34;&gt;&lt;/h1&gt;
&lt;h2 id=&#34;gulp基本指令&#34;&gt;gulp基本指令&lt;/h2&gt;
&lt;h1 id=&#34;heading-1&#34;&gt;&lt;/h1&gt;</description>
    </item>
    
  </channel>
</rss>
